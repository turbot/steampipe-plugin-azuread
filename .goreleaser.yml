# .goreleaser.yml
version: 2

before:
  hooks:
    - go mod tidy -v

builds:
  - id: steampipe
    # produce: steampipe-plugin-<name>.plugin (ProjectName comes from module/repo)
    binary: "{{ .ProjectName }}.plugin"

    # Target platforms
    goos: [linux, darwin]
    goarch: [amd64, arm64]

    # Make it small & pure Go
    env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
      - -tags=netgo
    ldflags:
      # strip symbol/debug tables and build id
      - -s -w -buildid=
      # embed version info (optional, adjust package path if not main)
      - -X main.version={{ .Version }} -X main.commit={{ .Commit }} -X main.date={{ .Date }}

    # Extra shrinking after builds:
    # - Linux: run 'strip' (safe, big win).
    # - Optional UPX for Linux if env UPX=1 (e.g., set in workflow); skip if it errors.
    hooks:
      post:
        - cmd: |
            set -euo pipefail
            echo "Post-build shrink: strip (Linux) + optional UPX"
            # Strip Linux ELF binaries
            for f in dist/*/*/steampipe-plugin-*.plugin; do
              case "$f" in
                *"/linux_"*)
                  echo "Stripping $f"
                  strip -s "$f" || true
                  ;;
                *)
                  # macOS Mach-O: already smaller via -s -w; cross-strip on Linux isn't available -> skip
                  :
                  ;;
              esac
            done

            # Optional: UPX compress Linux binaries if UPX=1
            if [ "${UPX:-0}" = "1" ]; then
              echo "UPX requested: installing and compressing Linux binaries"
              sudo apt-get update -y && sudo apt-get install -y upx || true
              for f in dist/*/*/steampipe-plugin-*.plugin; do
                case "$f" in
                  *"/linux_"*)
                    echo "UPX compressing $f"
                    upx --best --lzma "$f" || true
                    ;;
                  *)
                    :
                    ;;
                esac
              done
            fi

archives:
  - id: default
    formats: [tar.gz]
    name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}"
    files:
      - "none*"

checksum:
  name_template: "{{ .ProjectName }}_{{ .Version }}_SHA256SUMS"
  algorithm: sha256

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
